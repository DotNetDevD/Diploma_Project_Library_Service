// <auto-generated />
using System;
using LibraryAggregator.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryAggregator.DataLayer.Migrations
{
    [DbContext(typeof(LibraryDataBaseContext))]
    partial class LibraryDataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuthorId")
                        .HasName("PK__Author__70DAFC34E9BADC14");

                    b.ToTable("Author", (string)null);
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.AuthorsBook", b =>
                {
                    b.Property<int>("AuthorsBooksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorsBooksId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorsBooksId")
                        .HasName("PK__AuthorsB__E0C25E886755A2F4");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorsBooks");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("CoverImgPath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(23)
                        .HasColumnType("nvarchar(23)")
                        .HasColumnName("ISBN");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BookId")
                        .HasName("PK__Book__3DE0C207BE51473D");

                    b.HasIndex(new[] { "Isbn" }, "UQ__Book__447D36EA06ADE972")
                        .IsUnique();

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.BooksGenre", b =>
                {
                    b.Property<int>("BooksGenresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BooksGenresId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("BooksGenresId")
                        .HasName("PK__BooksGen__8D4DA176FE0124EF");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BooksGenres");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.BooksLibrary", b =>
                {
                    b.Property<int>("BooksLibrariesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BooksLibrariesId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.HasKey("BooksLibrariesId")
                        .HasName("PK__BooksLib__D9FCBEB6058BCAE3");

                    b.HasIndex("BookId");

                    b.HasIndex("LibraryId");

                    b.ToTable("BooksLibraries");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreId")
                        .HasName("PK__Genre__0385057E1C92AF8D");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Library", b =>
                {
                    b.Property<int>("LibraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibraryId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LibraryId")
                        .HasName("PK__Library__A136475FA23EBF26");

                    b.ToTable("Library", (string)null);
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.AuthorsBook", b =>
                {
                    b.HasOne("LibraryAggregator.DataLayer.Entities.Author", "Author")
                        .WithMany("AuthorsBooks")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__AuthorsBo__Autho__3B75D760");

                    b.HasOne("LibraryAggregator.DataLayer.Entities.Book", "Book")
                        .WithMany("AuthorsBooks")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK__AuthorsBo__BookI__3C69FB99");

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.BooksGenre", b =>
                {
                    b.HasOne("LibraryAggregator.DataLayer.Entities.Book", "Book")
                        .WithMany("BooksGenres")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK__BooksGenr__BookI__46E78A0C");

                    b.HasOne("LibraryAggregator.DataLayer.Entities.Genre", "Genre")
                        .WithMany("BooksGenres")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK__BooksGenr__Genre__47DBAE45");

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.BooksLibrary", b =>
                {
                    b.HasOne("LibraryAggregator.DataLayer.Entities.Book", "Book")
                        .WithMany("BooksLibraries")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK__BooksLibr__BookI__412EB0B6");

                    b.HasOne("LibraryAggregator.DataLayer.Entities.Library", "Library")
                        .WithMany("BooksLibraries")
                        .HasForeignKey("LibraryId")
                        .IsRequired()
                        .HasConstraintName("FK__BooksLibr__Libra__4222D4EF");

                    b.Navigation("Book");

                    b.Navigation("Library");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Country", b =>
                {
                    b.HasOne("LibraryAggregator.DataLayer.Entities.Library", "Library")
                        .WithMany()
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Author", b =>
                {
                    b.Navigation("AuthorsBooks");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Book", b =>
                {
                    b.Navigation("AuthorsBooks");

                    b.Navigation("BooksGenres");

                    b.Navigation("BooksLibraries");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Genre", b =>
                {
                    b.Navigation("BooksGenres");
                });

            modelBuilder.Entity("LibraryAggregator.DataLayer.Entities.Library", b =>
                {
                    b.Navigation("BooksLibraries");
                });
#pragma warning restore 612, 618
        }
    }
}
